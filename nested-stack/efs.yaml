AWSTemplateFormatVersion: "2010-09-09"

Description: |
  ECS Cluster

Resources:
  FargateSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: !Sub ${AWS::StackName}-FargateService
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0  # Allow incoming traffic on port 80
        - IpProtocol: tcp
          FromPort: '2049'
          ToPort: '2049'
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: environment
          Value: !Ref EnvironmentName

  EfsSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: !Sub ${AWS::StackName}-EFSSecurityGroup
      VpcId: !Ref VpcId
      SecurityGroupIngress:  # Allow inbound connections on port 2049 (NFS)
        - IpProtocol: tcp
          FromPort: '2049'
          ToPort: '2049'
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: environment
          Value: !Ref EnvironmentName

  EFSFileSystem:
    Type: "AWS::EFS::FileSystem"
    Properties:
      Encrypted: true
      PerformanceMode: generalPurpose
      FileSystemTags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-efs
        - Key: environment
          Value: !Ref EnvironmentName

  EFSMountTargetA:
    Type: "AWS::EFS::MountTarget"
    Properties:
      FileSystemId: !Ref EFSFileSystem
      SubnetId: !Select [ 0, !Ref EcsHostSubnets ]  # add mount target to the first subnet
      SecurityGroups: [!GetAtt EfsSecurityGroup.GroupId]